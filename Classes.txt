//Session Storage
store -> ArrayList<ArchiveImage> pendingImages;

//class used to store image and its data
//also creates query and Blob upload statements
class ArchiveImage{
	private Image fullImage;
	private Image thumbnail;
	private ArrayList<Context> contexts;
	private int userID;
	private double lat;
	private double lon;
	
	public ArchiveImage(){
		
	}
	
	public ArchiveImage(Image fullImage, Image thumbnail, ArrayList<Context> contexts, int userID, double lat, double lon){
		this.fullImage = fullImage;
		this.thumbnail = thumbnail;
		this.contexts = contexts;
		this.userID = userID;
		this.lat = lat;
		this.lon = lon;
		
	}
	
	//generates query to upload to databse
	private string createUploadQuery(){
		//TODO
	}
	
	//generates information to upload to Blob Container
	private string createBlobToken(){
		//TODO
	}
}

//class used to store context information, including id and ArrayList of Attributes

/*Contexts we have so far:
ID - Name
----------
1 - Meeting
2 - Permit
3 - Project
4 - Celltower*/

class Context{
	private int contextID;
	private ArrayList<Attribute> attributes;
	
	public Context(){
		
	}
	
	public Context(int contextID, ArrayList<Attribute> attributes){
		this.contextID = contextID;
		this.attributes = attributes;
	}
	
}

/*Attributes we have so far:
ID - Descriptor - Question
---------------------------
1 - Number of People - How many people are in the photo?
2 - Location - Where was the photo taken?
3 - Meeting Topic - What is the topic of the meeting?
4 - Permit Number - What is the Permit Number?
5 - Project Number - What is the Project Number?
6 - Owner Company - What is the company that owns this tower?
7 - Signal Reach - How far does the signal reach?*/

//class used to store attribute information including id and value
class Attribute{
	private int attributeID;
	privatr string value;
	
	public Attribute(){
		
	}
	
	public Attribute(int attributeID, string value){
		this.attributeID = attributeID;
		this.value = value;
	}
}